<?php

// Author: Eugen Mayer (http://kontextwork.de)
// Converted from D6 to D7 by iStryker
// D6 backwards compatibiliy by E. Hartmann
// Copyright 2010

function drupalwiki_tagging_suggest_tagging_suggestions($vid, $node) {
  require_once 'drupalwiki_extractor.inc';
  $suggestions = array();
  $text = '';
  $lang = $node->language;
  if (is_array($node->body)) {
    //(d7) $node->body is in a weird array format
    $body = $node->body;
    foreach ($body as $lang) {
      foreach ($lang as $item) {
        $text .= $item['value'];
      }
    }
  } else {
    $text = $node->body;
  }
  // TODO: check node->language for current lang
  $terms = drupalwiki_extractor_extract($text, $lang, NULL);
  $vids = array($vid);
  _drupalwiki_tagging_suggest_mark_new($terms, $vids);
  return $terms;
}

/**
 * Look up terms for a given word. Supports up to 2000 terms.
 */
function _drupalwiki_tagging_suggest_mark_new(&$tags, $vids) {
  if (!is_array($vids) || count($vids) == 0) {
    return;
  }
  //  this function can be called multiple times.  Don't redeclare multiple times
  static $term_cache = array();
  static $loaded;

  if (!$loaded) {
    if(strpos(VERSION, '7') === 0) {
      $terms = db_query_range("SELECT td.tid, td.name FROM {taxonomy_term_data} td WHERE td.vid IN (:multi_things)", 0, 2000, array('multi_things' => implode(', ', $vids)));
      foreach ($terms as $term) {
        //  for better debugging each term is organized by its first letter
        $term_cache[strtolower($term->name[0])][$term->name] = $term;
      }
    } else {
      $result = db_query_range("SELECT td.tid, td.name FROM {term_data} td WHERE td.vid IN (%s)", implode(', ', $vids), 0, 2000);
      while ($term = db_fetch_object($result)) {
        //  for better debugging each term is organized by its first letter
        $term_cache[strtolower($term->name[0])][$term->name] = $term;
      }
    }
    $loaded = TRUE;
  }
  if (!empty($term_cache)) {
    foreach ($tags as &$tag) {
      $first_c = drupal_strtolower($tag['#name'][0]);
      if (isset($term_cache[$first_c]) && array_key_exists($tag['#name'], $term_cache[$first_c])) {
        
      } else {
        $tag['#new'] = TRUE;
      }
    }
  } else {
    foreach ($tags as &$tag) {
      $tag['#new'] = TRUE;
    }
  }
}

